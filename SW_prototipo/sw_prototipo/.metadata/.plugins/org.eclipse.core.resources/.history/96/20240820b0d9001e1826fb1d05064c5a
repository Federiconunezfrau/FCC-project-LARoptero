/*
 * taskEstimateAttitude.cpp
 *
 *  Created on: Mar 3, 2024
 *      Author: fede
 */

#include "taskEstimateAttitude.h"
#include "attitudeEstimator.h"

void taskEstimateAttitude_constructor(taskEstimateAttitude_t *me, uint32_t delayTicks, uint32_t periodTicks, uint32_t wcetMicroSeconds, uint32_t bcetMicroSeconds, uint32_t handleMsg)
{
	timeTriggeredTask_constructor(&me->super, (taskHandler_t)&taskEstimateAttitude_update, delayTicks, periodTicks, wcetMicroSeconds, bcetMicroSeconds);

	me->mHandleMsg_ = handleMsg;
}

void taskEstimateAttitude_destructor(taskEstimateAttitude_t *me)
{
	//TODO: hay que hacer que si uno llama a la tarea nuevamente, la tarea simplemente no haga nada.
	timeTriggeredTask_destructor(&me->super);
}

void taskEstimateAttitude_start(taskEstimateAttitude_t *me)
{
	//TODO: acá podría uno decirle a la CNI que se va a encargar de enviar el mensaje
	// asociado al handleMsg.
}

void taskEstimateAttitude_update(taskEstimateAttitude_t *me)
{
	// Buscar los datos de la IMU en la tabla de CNI

	// Armar los arreglos para pasarle al estimador

	// estimar
	attitudeEstimator_update(float*, float*);
}
