/*
 * timeTriggeredScheduler.h
 *
 *  Created on: Feb 10, 2024
 *      Author: fede
 */

#ifndef INC_TIMETRIGGEREDSCHEDULER_H_
#define INC_TIMETRIGGEREDSCHEDULER_H_

#include "myTimer.h"
#include "timeTriggeredTask.h"

#define MAX_NUM_TASKS 10

typedef enum
{
	OK = 0,
	ERROR_MAX_TASKS_REACHED
} TTschedulerStatus_t;

typedef struct
{
	myTimer_t *mTimer_;
	timeTriggeredTask_t *mTaskList_[MAX_NUM_TASKS];
} timeTriggeredScheduler_t;

void timeTriggeredScheduler_constructor ( timeTriggeredScheduler_t*, myTimer_t* );
void timeTriggeredScheduler_init        ( timeTriggeredScheduler_t* );
void timeTriggeredScheduler_start       ( timeTriggeredScheduler_t* );
void timeTriggeredScheduler_dispatch    ( timeTriggeredScheduler_t* );
void timeTriggeredScheduler_add_task    ( timeTriggeredScheduler_t*, timeTriggeredTask_t* );

#endif /* INC_TIMETRIGGEREDSCHEDULER_H_ */
