/*
 * myUART.c
 *
 *  Created on: Feb 11, 2024
 *      Author: fede
 */

#include "myUART.h"

void myUART_constructor(myUART_t *me, UART_HandleTypeDef *huart)
{
	me->mHuart_ = huart;
	me->mEnabled_ = 0;
	circularBuffer_constructor(&me->mCbuf_, me->mRxBuf_, LEN_RX_BUFFER);
}

void myUART_enable(myUART_t *me)
{
	if(!me->mEnabled_)
	{
		HAL_UART_Receive_IT(me->mHuart_, &me->mAux_, 1);
	}
}

void myUART_disable(myUART_t *me)
{
	if(me->mEnabled_)
	{
		HAL_UART_AbortReceive_IT(me->mHuart_);
	}
}

uint16_t myUART_read(myUART_t *me, uint8_t *buffer, uint16_t lenBuffer )
{
	uint16_t available = circularBuffer_length_data(&me->mCbuf_);
	uint16_t read = 0;

	if(available > lenBuffer)
	{
		available = lenBuffer;
	}

	while(read < available)
	{
		circularBuffer_read(&me->mCbuf_, &buffer[read]);
		read++;
	}

	return read;
}

void myUART_send(myUART_t *me, uint8_t *buffer, uint16_t lenBuffer)
{
	HAL_UART_Transmit(me->mHuart_, buffer, lenBuffer, )
}

void myUART_IRQ_handler(myUART_t *me)
{

}
